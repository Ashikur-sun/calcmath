/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import classes.CopiarColar;
import enumeradores.Simbolos;
import enumeradores.ConstantesMatematicas;
import enumeradores.Meses;
import interfaces.Operacoes;
import java.awt.Color;
import java.util.Calendar;
import javax.swing.DefaultListModel;
import static java.lang.Math.sqrt;
import static java.lang.Math.cos;
import static java.lang.Math.sin;
import static java.lang.Math.pow;
import static java.lang.Math.tan;
import static java.lang.Math.cosh;
import static java.lang.Math.sinh;
import static java.lang.Math.tanh;
import static java.lang.Math.log;
import static java.lang.Math.exp;
import static java.lang.Math.log10;

/**
 * Classe Calculadora 
 * @author Thalyson Alexandre Rodrigues de Sousa
 * Creation         1.0 21/10/2016
 */
public class Calculadora extends javax.swing.JFrame implements Operacoes {

    /**
     * Creates new form CalculadoraBasica
     */
    public Calculadora() {
        initComponents();
        this.controle = false;
        this.opAtua = Simbolos.NULO.getSimbolo();
        this.operac = null;
        this.valor1 = 0.0f;
        this.valor2 = 0.0f;
        this.result = 0.0f;
        this.limpar = false;
        this.data = "";
        this.lblInMemory.setVisible(false);                   
        this.jFrameRascunho.setAlwaysOnTop(true);             
        this.jFrameConstantes.setAlwaysOnTop(true);           
        this.jDialogInformacoesLegais.setAlwaysOnTop(true);  
        this.setTitle("Calculadora");                         
        this.setLocationRelativeTo(null);                    
        this.setAlwaysOnTop(true);                           
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogInformacoesLegais = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        lblAutor = new javax.swing.JLabel();
        lblVersaoAtual = new javax.swing.JLabel();
        lblUltVersao = new javax.swing.JLabel();
        lblDataCriacao = new javax.swing.JLabel();
        lblDataUltVersao = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jFrameRascunho = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaRascunho = new javax.swing.JTextArea();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMeCopiarRascunho = new javax.swing.JMenuItem();
        jMeColarRascunho = new javax.swing.JMenuItem();
        jFrameConstantes = new javax.swing.JFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstConstantes = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu6 = new javax.swing.JMenu();
        jMeCopiarConstante = new javax.swing.JMenuItem();
        txtTela = new javax.swing.JTextField();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btnAdicao = new javax.swing.JButton();
        btnSub = new javax.swing.JButton();
        btnMulti = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        btnDivisao = new javax.swing.JButton();
        btnResultado = new javax.swing.JButton();
        btnPonto = new javax.swing.JButton();
        btnLimparC = new javax.swing.JButton();
        btnPorcentagem = new javax.swing.JButton();
        btnPotenciacao = new javax.swing.JButton();
        txtTelaHistory = new javax.swing.JTextField();
        btnLimparCE = new javax.swing.JButton();
        btnPositivoNegativo = new javax.swing.JButton();
        btnMemoryClear = new javax.swing.JButton();
        btnMemoryRecovery = new javax.swing.JButton();
        btnMemorySaved = new javax.swing.JButton();
        lblInMemory = new javax.swing.JLabel();
        btnCos = new javax.swing.JButton();
        btnSen = new javax.swing.JButton();
        btnRaiz = new javax.swing.JButton();
        btnRecipocro = new javax.swing.JButton();
        lblData = new javax.swing.JLabel();
        btnBackspace = new javax.swing.JButton();
        btnTan = new javax.swing.JButton();
        btnCosH = new javax.swing.JButton();
        btnSenH = new javax.swing.JButton();
        btnTanH = new javax.swing.JButton();
        btnFatorial = new javax.swing.JButton();
        btnMod = new javax.swing.JButton();
        btnElevaQuad = new javax.swing.JButton();
        btnElevaCub = new javax.swing.JButton();
        btnLog10 = new javax.swing.JButton();
        btnExp = new javax.swing.JButton();
        btnLog = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMeSair = new javax.swing.JMenuItem();
        jMeInformacoes = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMeCopiar = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMeRascunho = new javax.swing.JMenuItem();
        jMeListaConstantes = new javax.swing.JMenuItem();

        jDialogInformacoesLegais.setLocation(new java.awt.Point(450, 200));
        jDialogInformacoesLegais.setModal(true);
        jDialogInformacoesLegais.setResizable(false);
        jDialogInformacoesLegais.setSize(new java.awt.Dimension(230, 200));

        jLabel1.setText("<html><strong>Informações legais:");

        lblAutor.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblAutor.setText("<html><strong>Autor:</strong> Thalyson A. Rodrigues");

        lblVersaoAtual.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblVersaoAtual.setText("Versão atual: 1.2");

        lblUltVersao.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblUltVersao.setText("Ultima versão: 1.1");

        lblDataCriacao.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblDataCriacao.setText("Criação: 21/10/2016");

        lblDataUltVersao.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblDataUltVersao.setText("Data da ultima versão: 30/11/2016");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel2.setText("Contato: tha.motog@gmail.com");

        javax.swing.GroupLayout jDialogInformacoesLegaisLayout = new javax.swing.GroupLayout(jDialogInformacoesLegais.getContentPane());
        jDialogInformacoesLegais.getContentPane().setLayout(jDialogInformacoesLegaisLayout);
        jDialogInformacoesLegaisLayout.setHorizontalGroup(
            jDialogInformacoesLegaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogInformacoesLegaisLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jDialogInformacoesLegaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblVersaoAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDataCriacao, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUltVersao, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDataUltVersao, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jDialogInformacoesLegaisLayout.setVerticalGroup(
            jDialogInformacoesLegaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogInformacoesLegaisLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(lblVersaoAtual)
                .addGap(6, 6, 6)
                .addComponent(lblDataCriacao)
                .addGap(6, 6, 6)
                .addComponent(lblUltVersao)
                .addGap(6, 6, 6)
                .addComponent(lblDataUltVersao)
                .addGap(6, 6, 6)
                .addComponent(jLabel2)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jFrameRascunho.setLocation(new java.awt.Point(450, 200));
        jFrameRascunho.setResizable(false);
        jFrameRascunho.setSize(new java.awt.Dimension(250, 280));

        txtAreaRascunho.setColumns(20);
        txtAreaRascunho.setRows(5);
        txtAreaRascunho.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                txtAreaRascunhoAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(txtAreaRascunho);

        jMenu5.setText("Editar");

        jMeCopiarRascunho.setText("Copiar");
        jMeCopiarRascunho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMeCopiarRascunhoActionPerformed(evt);
            }
        });
        jMenu5.add(jMeCopiarRascunho);

        jMeColarRascunho.setText("Colar");
        jMeColarRascunho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMeColarRascunhoActionPerformed(evt);
            }
        });
        jMenu5.add(jMeColarRascunho);

        jMenuBar2.add(jMenu5);

        jFrameRascunho.setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout jFrameRascunhoLayout = new javax.swing.GroupLayout(jFrameRascunho.getContentPane());
        jFrameRascunho.getContentPane().setLayout(jFrameRascunhoLayout);
        jFrameRascunhoLayout.setHorizontalGroup(
            jFrameRascunhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrameRascunhoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
        jFrameRascunhoLayout.setVerticalGroup(
            jFrameRascunhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrameRascunhoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addContainerGap())
        );

        jFrameConstantes.setResizable(false);
        jFrameConstantes.setSize(new java.awt.Dimension(370, 350));

        lstConstantes.setModel(lista);
        lstConstantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstConstantesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lstConstantes);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("Constantes matemáticas");

        jMenu6.setText("Editar");

        jMeCopiarConstante.setText("Copiar");
        jMeCopiarConstante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMeCopiarConstanteActionPerformed(evt);
            }
        });
        jMenu6.add(jMeCopiarConstante);

        jMenuBar3.add(jMenu6);

        jFrameConstantes.setJMenuBar(jMenuBar3);

        javax.swing.GroupLayout jFrameConstantesLayout = new javax.swing.GroupLayout(jFrameConstantes.getContentPane());
        jFrameConstantes.getContentPane().setLayout(jFrameConstantesLayout);
        jFrameConstantesLayout.setHorizontalGroup(
            jFrameConstantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrameConstantesLayout.createSequentialGroup()
                .addGroup(jFrameConstantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrameConstantesLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jFrameConstantesLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jFrameConstantesLayout.setVerticalGroup(
            jFrameConstantesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrameConstantesLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(102, 102, 255));
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);
        setSize(new java.awt.Dimension(23, 23));

        txtTela.setEditable(false);
        txtTela.setBackground(new java.awt.Color(255, 255, 255));
        txtTela.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        txtTela.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTela.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btn1.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        btn1.setText("1");
        btn1.setBorder(null);
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        btn2.setText("2");
        btn2.setBorder(null);
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        btn3.setText("3");
        btn3.setBorder(null);
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        btn4.setText("4");
        btn4.setBorder(null);
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        btn5.setText("5");
        btn5.setBorder(null);
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        btn6.setText("6");
        btn6.setBorder(null);
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn7.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        btn7.setText("7");
        btn7.setBorder(null);
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        btn8.setText("8");
        btn8.setBorder(null);
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        btn9.setText("9");
        btn9.setBorder(null);
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btnAdicao.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnAdicao.setText("+");
        btnAdicao.setBorder(null);
        btnAdicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicaoActionPerformed(evt);
            }
        });

        btnSub.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnSub.setText("-");
        btnSub.setBorder(null);
        btnSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubActionPerformed(evt);
            }
        });

        btnMulti.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnMulti.setText("*");
        btnMulti.setBorder(null);
        btnMulti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiActionPerformed(evt);
            }
        });

        btn0.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        btn0.setText("0");
        btn0.setBorder(null);
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });

        btnDivisao.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnDivisao.setText("<html><&divide<html>");
        btnDivisao.setBorder(null);
        btnDivisao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivisaoActionPerformed(evt);
            }
        });

        btnResultado.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnResultado.setText("=");
        btnResultado.setBorder(null);
        btnResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResultadoActionPerformed(evt);
            }
        });

        btnPonto.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        btnPonto.setText(".");
        btnPonto.setBorder(null);
        btnPonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPontoActionPerformed(evt);
            }
        });

        btnLimparC.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        btnLimparC.setForeground(new java.awt.Color(102, 102, 102));
        btnLimparC.setText("C");
        btnLimparC.setBorder(null);
        btnLimparC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCActionPerformed(evt);
            }
        });

        btnPorcentagem.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnPorcentagem.setText("%");
        btnPorcentagem.setBorder(null);
        btnPorcentagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPorcentagemActionPerformed(evt);
            }
        });

        btnPotenciacao.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnPotenciacao.setText("X^y");
        btnPotenciacao.setBorder(null);
        btnPotenciacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPotenciacaoActionPerformed(evt);
            }
        });

        txtTelaHistory.setEditable(false);
        txtTelaHistory.setBackground(new java.awt.Color(255, 255, 255));
        txtTelaHistory.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTelaHistory.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTelaHistory.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnLimparCE.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        btnLimparCE.setForeground(new java.awt.Color(102, 102, 102));
        btnLimparCE.setText("CE");
        btnLimparCE.setBorder(null);
        btnLimparCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCEActionPerformed(evt);
            }
        });

        btnPositivoNegativo.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        btnPositivoNegativo.setForeground(new java.awt.Color(102, 102, 102));
        btnPositivoNegativo.setText("+/-");
        btnPositivoNegativo.setBorder(null);
        btnPositivoNegativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPositivoNegativoActionPerformed(evt);
            }
        });

        btnMemoryClear.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        btnMemoryClear.setForeground(new java.awt.Color(102, 102, 102));
        btnMemoryClear.setText("MC");
        btnMemoryClear.setBorder(null);
        btnMemoryClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemoryClearActionPerformed(evt);
            }
        });

        btnMemoryRecovery.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        btnMemoryRecovery.setForeground(new java.awt.Color(102, 102, 102));
        btnMemoryRecovery.setText("MR");
        btnMemoryRecovery.setBorder(null);
        btnMemoryRecovery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemoryRecoveryActionPerformed(evt);
            }
        });

        btnMemorySaved.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        btnMemorySaved.setForeground(new java.awt.Color(102, 102, 102));
        btnMemorySaved.setText("MS");
        btnMemorySaved.setBorder(null);
        btnMemorySaved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemorySavedActionPerformed(evt);
            }
        });

        lblInMemory.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblInMemory.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInMemory.setText("0");
        lblInMemory.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lblInMemoryAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        btnCos.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnCos.setText("Cos");
        btnCos.setBorder(null);
        btnCos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCosActionPerformed(evt);
            }
        });

        btnSen.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnSen.setText("Sen");
        btnSen.setBorder(null);
        btnSen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSenActionPerformed(evt);
            }
        });

        btnRaiz.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnRaiz.setText("<html><&Radic");
        btnRaiz.setBorder(null);
        btnRaiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaizActionPerformed(evt);
            }
        });

        btnRecipocro.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnRecipocro.setText("1/X");
        btnRecipocro.setBorder(null);
        btnRecipocro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecipocroActionPerformed(evt);
            }
        });

        lblData.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        lblData.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblData.setText("null");
        lblData.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lblDataAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        btnBackspace.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnBackspace.setForeground(new java.awt.Color(102, 102, 102));
        btnBackspace.setText("<html>&larr");
        btnBackspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackspaceActionPerformed(evt);
            }
        });

        btnTan.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnTan.setText("Tan");
        btnTan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTanActionPerformed(evt);
            }
        });

        btnCosH.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnCosH.setText("CosH");
        btnCosH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCosHActionPerformed(evt);
            }
        });

        btnSenH.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnSenH.setText("SenH");
        btnSenH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSenHActionPerformed(evt);
            }
        });

        btnTanH.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnTanH.setText("TanH");
        btnTanH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTanHActionPerformed(evt);
            }
        });

        btnFatorial.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnFatorial.setText("Fat!");
        btnFatorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFatorialActionPerformed(evt);
            }
        });

        btnMod.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnMod.setText("Mod");
        btnMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModActionPerformed(evt);
            }
        });

        btnElevaQuad.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnElevaQuad.setText("X^2");
        btnElevaQuad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElevaQuadActionPerformed(evt);
            }
        });

        btnElevaCub.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnElevaCub.setText("X^3");
        btnElevaCub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElevaCubActionPerformed(evt);
            }
        });

        btnLog10.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnLog10.setText("Log10");
        btnLog10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLog10ActionPerformed(evt);
            }
        });

        btnExp.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnExp.setText("Exp");
        btnExp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpActionPerformed(evt);
            }
        });

        btnLog.setFont(new java.awt.Font("Arial", 1, 8)); // NOI18N
        btnLog.setText("Log");
        btnLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogActionPerformed(evt);
            }
        });

        jMenu1.setText("Arquivo");

        jMeSair.setText("Sair");
        jMeSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMeSairActionPerformed(evt);
            }
        });
        jMenu1.add(jMeSair);

        jMeInformacoes.setText("Informações");
        jMeInformacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMeInformacoesActionPerformed(evt);
            }
        });
        jMenu1.add(jMeInformacoes);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");

        jMeCopiar.setText("Copiar");
        jMeCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMeCopiarActionPerformed(evt);
            }
        });
        jMenu2.add(jMeCopiar);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ferramentas");

        jMeRascunho.setText("Rascunho");
        jMeRascunho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMeRascunhoActionPerformed(evt);
            }
        });
        jMenu3.add(jMeRascunho);

        jMeListaConstantes.setText("Lista de constantes");
        jMeListaConstantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMeListaConstantesActionPerformed(evt);
            }
        });
        jMenu3.add(jMeListaConstantes);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblData, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(lblInMemory, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPonto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(btnResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPorcentagem, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRaiz, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCosH, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRecipocro, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSenH, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFatorial, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTanH, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMod, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btnMulti, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(btnDivisao, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(btnCos, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btnSen, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btnTan, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLog10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnLimparC, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnLimparCE, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnBackspace, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnPositivoNegativo, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnMemoryClear, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnMemoryRecovery, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnAdicao, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(btnSub, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnPotenciacao, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnElevaQuad, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnElevaCub, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMemorySaved, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(txtTela, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(txtTelaHistory)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblData, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInMemory))
                .addGap(7, 7, 7)
                .addComponent(txtTelaHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(txtTela, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLimparC, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimparCE, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBackspace, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPositivoNegativo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMemoryClear, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnMemoryRecovery, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMemorySaved, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicao, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSub, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPotenciacao, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnElevaQuad, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnElevaCub, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLog, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMulti, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDivisao, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSen, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLog10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnCosH, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnPorcentagem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(6, 6, 6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnRecipocro, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnRaiz, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnSenH, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(8, 8, 8)
                            .addComponent(btnFatorial, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnTanH, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(8, 8, 8)
                            .addComponent(btnMod, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnExp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(btnPonto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        getAccessibleContext().setAccessibleName("Calculadora");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        // TODO add your handling code here: 
        this.verificarLimpo();    
        this.inserirDigitos(Simbolos.B_UM);  // chamar método inserção de caracteres em telaFormula
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
        this.verificarLimpo(); 
        this.inserirDigitos(Simbolos.B_DOIS);
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        // TODO add your handling code here:
        this.verificarLimpo(); 
        this.inserirDigitos(Simbolos.B_TRES);
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        // TODO add your handling code here:
        this.verificarLimpo(); 
        this.inserirDigitos(Simbolos.B_QUATRO);
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        // TODO add your handling code here:
        this.verificarLimpo(); 
        this.inserirDigitos(Simbolos.B_CINCO);
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        // TODO add your handling code here:
        this.verificarLimpo(); 
        this.inserirDigitos(Simbolos.B_SEIS);
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        // TODO add your handling code here:
        this.verificarLimpo(); 
        this.inserirDigitos(Simbolos.B_SETE);
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        // TODO add your handling code here:
        this.verificarLimpo(); 
        this.inserirDigitos(Simbolos.B_OITO);
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        // TODO add your handling code here:
        this.verificarLimpo(); 
        this.inserirDigitos(Simbolos.B_NOVE);
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
        // TODO add your handling code here:
        this.verificarLimpo(); 
        this.inserirDigitos(Simbolos.B_ZERO);
    }//GEN-LAST:event_btn0ActionPerformed

    private void btnLimparCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCActionPerformed
        // TODO add your handling code here:
        this.limparTela(Simbolos.LIMPAR_C);
    }//GEN-LAST:event_btnLimparCActionPerformed

    private void btnAdicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicaoActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat2valor(Simbolos.SOMAR);
    }//GEN-LAST:event_btnAdicaoActionPerformed

    private void btnResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResultadoActionPerformed
        // TODO add your handling code here:
        
        if (this.getOpAtua().equals(Simbolos.NULO.getSimbolo())) {
            txtTelaHistory.setText(Simbolos.NULO.getSimbolo());
            this.setInsValores(true);
            this.setLimpar(true);
        }
        
        if (!(txtTelaHistory.getText().isEmpty() && this.getOpAtua().equals(Simbolos.NULO.getSimbolo()))) {
            
            this.setCliqueResultado(true); // Cliquei em resultado recebe verdadeiro
            
            this.setValor2(Double.parseDouble(txtTela.getText()));
            txtTela.setText(Simbolos.NULO.getSimbolo());

            switch (this.getOperac()) {
                case "+":
                    this.soma();
                    break;
                case "-":
                    this.subt();
                    break;
                case "*":
                    this.mult();
                    break;
                case "/":
                    this.divi();
                    break;
                case "%":
                    this.setOperac(Simbolos.PORCENTAGEM.getSimbolo());
                    this.porcentagem();
                    break;
                case "^":
                    this.setOperac(Simbolos.POTENCIA.getSimbolo());
                    this.potenciacao();
                    break;
            }
            this.setOpAtua(Simbolos.NULO.getSimbolo());
            txtTelaHistory.setText(Simbolos.NULO.getSimbolo());
            this.imprimeInteiroOuReal(this.getResult());
            this.setExceCalcUmValor(false);
        }
    }//GEN-LAST:event_btnResultadoActionPerformed

    private void btnSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat2valor(Simbolos.SUBTRAIR);
    }//GEN-LAST:event_btnSubActionPerformed

    private void btnMultiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat2valor(Simbolos.MULTIPLICAR);
    }//GEN-LAST:event_btnMultiActionPerformed

    private void btnDivisaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivisaoActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat2valor(Simbolos.DIVIDIR);
    }//GEN-LAST:event_btnDivisaoActionPerformed

    private void btnPontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPontoActionPerformed
        // TODO add your handling code here:
        this.inicio = filtroOperacoes2valores();
        if (this.isInicio()) {
            int i = txtTela.getText().indexOf(Simbolos.PONTO.getSimbolo());
            if ((i == -1) && !this.isCliqueResultado()) { // Se não houver '.' na tela é inserido '.'
                txtTela.setText(txtTela.getText() + Simbolos.PONTO.getSimbolo());
            }
        }
    }//GEN-LAST:event_btnPontoActionPerformed

    private void btnRaizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaizActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat1Valor(Simbolos.RAIZ_QUADRADA);
    }//GEN-LAST:event_btnRaizActionPerformed

    private void btnPorcentagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPorcentagemActionPerformed
        // TODO add your handling code here:
        this.inicio = filtroOperacoes2valores();
        if (this.isInicio()) {
            this.setOperac(Simbolos.PORCENTAGEM.getSimbolo());
            txtTelaHistory.setText(txtTela.getText() + Simbolos.PORCENTAGEM.getSimbolo() + " de ");
            this.setValor1(Double.parseDouble(txtTela.getText().replaceAll(",", ".")));
            this.setLimpar(true);
            this.setOpAtua(Simbolos.POTENCIA.getSimbolo());
        }
    }//GEN-LAST:event_btnPorcentagemActionPerformed

    private void btnCosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCosActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat1Valor(Simbolos.COSSENO);
    }//GEN-LAST:event_btnCosActionPerformed

    private void btnSenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSenActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat1Valor(Simbolos.SENO);
    }//GEN-LAST:event_btnSenActionPerformed

    private void btnPotenciacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPotenciacaoActionPerformed
        // TODO add your handling code here:
        this.inicio = filtroOperacoes2valores();
        if (this.isInicio()) {    
            this.setOperac(Simbolos.POTENCIA.getSimbolo());
            txtTelaHistory.setText(txtTela.getText() + " " + Simbolos.POTENCIA.getSimbolo() + " ");
            this.setValor1(Double.parseDouble(txtTela.getText().replaceAll(",", ".")));
            this.setLimpar(true);
            this.setOpAtua(Simbolos.POTENCIA.getSimbolo());
        }
    }//GEN-LAST:event_btnPotenciacaoActionPerformed

    private void jMeSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMeSairActionPerformed
        // TODO add your handling code here:
        System.exit(Integer.parseInt(Simbolos.B_ZERO.getSimbolo()));
    }//GEN-LAST:event_jMeSairActionPerformed

    private void jMeInformacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMeInformacoesActionPerformed
        // TODO add your handling code here:
        jDialogInformacoesLegais.setLocationRelativeTo(null); 
        jDialogInformacoesLegais.setVisible(true); 
    }//GEN-LAST:event_jMeInformacoesActionPerformed

    private void jMeCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMeCopiarActionPerformed
        // TODO add your handling code here:
        this.copy.copiarJtF(txtTela);
    }//GEN-LAST:event_jMeCopiarActionPerformed

    private void jMeRascunhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMeRascunhoActionPerformed
        // TODO add your handling code here:
        jFrameRascunho.setLocationRelativeTo(null); 
        jFrameRascunho.setVisible(true); 
    }//GEN-LAST:event_jMeRascunhoActionPerformed

    private void txtAreaRascunhoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_txtAreaRascunhoAncestorAdded
        // TODO add your handling code here:
        txtAreaRascunho.setLineWrap(true);      
        txtAreaRascunho.setWrapStyleWord(true);
    }//GEN-LAST:event_txtAreaRascunhoAncestorAdded

    private void btnLimparCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCEActionPerformed
        // TODO add your handling code here:
        this.limparTela(Simbolos.LIMPAR_CE);
    }//GEN-LAST:event_btnLimparCEActionPerformed

    private void jMeCopiarRascunhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMeCopiarRascunhoActionPerformed
        // TODO add your handling code here:
        this.copy.copiarJtA(txtAreaRascunho);
    }//GEN-LAST:event_jMeCopiarRascunhoActionPerformed

    private void jMeColarRascunhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMeColarRascunhoActionPerformed
        // TODO add your handling code here:
        this.copy.colarJtA(txtAreaRascunho);
    }//GEN-LAST:event_jMeColarRascunhoActionPerformed

    private void btnMemorySavedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemorySavedActionPerformed
        // TODO add your handling code here:
        if (!txtTela.getText().isEmpty()) {
            this.memoria = Double.parseDouble(txtTela.getText());
            this.setCliqueResultado(false);
            lblInMemory.setText("M");
            lblInMemory.setVisible(true);
        }
    }//GEN-LAST:event_btnMemorySavedActionPerformed

    private void btnMemoryClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemoryClearActionPerformed
        // TODO add your handling code here:
        this.memoria = Float.parseFloat(Simbolos.B_ZERO.getSimbolo());
        lblInMemory.setVisible(false);
    }//GEN-LAST:event_btnMemoryClearActionPerformed

    private void btnMemoryRecoveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemoryRecoveryActionPerformed
        // TODO add your handling code here:
        if (this.memoria != Float.parseFloat(Simbolos.B_ZERO.getSimbolo())) {
            imprimeInteiroOuReal(memoria);
            this.setInsValores(true);
            this.setCliqueResultado(false);
        }
    }//GEN-LAST:event_btnMemoryRecoveryActionPerformed

    private void jMeListaConstantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMeListaConstantesActionPerformed
        // TODO add your handling code here:
        this.carregarConstantes();   // Chama o método para carregar as constantes
        jFrameConstantes.setLocationRelativeTo(null);
        jFrameConstantes.setVisible(true);
    }//GEN-LAST:event_jMeListaConstantesActionPerformed

    private void jMeCopiarConstanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMeCopiarConstanteActionPerformed
        // TODO add your handling code here:
        for (ConstantesMatematicas cons: ConstantesMatematicas.values()) {
            if (cons.getIndice() == this.indiceConstante) {
                this.copy.copiarStr(cons.getConstante());
            }
        }
    }//GEN-LAST:event_jMeCopiarConstanteActionPerformed

    private void lstConstantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstConstantesMouseClicked
        // TODO add your handling code here:
        this.indiceConstante = lstConstantes.getSelectedIndex();
    }//GEN-LAST:event_lstConstantesMouseClicked

    private void btnRecipocroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecipocroActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat1Valor(Simbolos.RECIPROCO);
    }//GEN-LAST:event_btnRecipocroActionPerformed

    private void lblDataAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lblDataAncestorAdded
        // TODO add your handling code here:
        this.data += this.c.get(Calendar.DATE);
        for (Meses m: Meses.values()) {
            if (m.getIndice() == this.c.get(Calendar.MONTH)) {
                this.data += m.toString();
                break;
            }
        }
        this.data += c.get(Calendar.YEAR);
        this.lblData.setForeground(Color.BLACK);
        this.lblData.setText(data);
    }//GEN-LAST:event_lblDataAncestorAdded

    private void btnBackspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackspaceActionPerformed
        // TODO add your handling code here
        if (!txtTela.getText().isEmpty()) {
            if (!this.isCliqueResultado()) {
                txtTela.setText(txtTela.getText().substring(0, txtTela.getText().length()-1));
            }
        }
    }//GEN-LAST:event_btnBackspaceActionPerformed

    private void btnPositivoNegativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPositivoNegativoActionPerformed
        // TODO add your handling code here:
        this.inicio = filtroOperacoes1valores();
        if (this.isInicio() && !this.isCliqueResultado()) {
            this.setCliquePosiNegat(true);
            this.imprimeInteiroOuReal(this.convertePositivoOuNegativo(Double.parseDouble(txtTela.getText())));
        }
    }//GEN-LAST:event_btnPositivoNegativoActionPerformed

    private void btnElevaQuadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElevaQuadActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat1Valor(Simbolos.ELEVA_QUAD);
    }//GEN-LAST:event_btnElevaQuadActionPerformed

    private void btnElevaCubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElevaCubActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat1Valor(Simbolos.ELEVA_CUB);
    }//GEN-LAST:event_btnElevaCubActionPerformed

    private void btnTanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTanActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat1Valor(Simbolos.TANGENTE);
    }//GEN-LAST:event_btnTanActionPerformed

    private void btnCosHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCosHActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat1Valor(Simbolos.COSSENO_H);
    }//GEN-LAST:event_btnCosHActionPerformed

    private void btnSenHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSenHActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat1Valor(Simbolos.SENO_H);
    }//GEN-LAST:event_btnSenHActionPerformed

    private void btnTanHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTanHActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat1Valor(Simbolos.TANGENTE_H);
    }//GEN-LAST:event_btnTanHActionPerformed

    private void btnFatorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFatorialActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat1Valor(Simbolos.FATORIAL);
    }//GEN-LAST:event_btnFatorialActionPerformed

    private void btnModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat1Valor(Simbolos.RESTO_DIVISAO_POR2);
    }//GEN-LAST:event_btnModActionPerformed

    private void lblInMemoryAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lblInMemoryAncestorAdded
        // TODO add your handling code here:
        lblInMemory.setForeground(Color.RED);
    }//GEN-LAST:event_lblInMemoryAncestorAdded

    private void btnLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat1Valor(Simbolos.LOGARITMO);
    }//GEN-LAST:event_btnLogActionPerformed

    private void btnExpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat1Valor(Simbolos.EXPOENTE);
    }//GEN-LAST:event_btnExpActionPerformed

    private void btnLog10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLog10ActionPerformed
        // TODO add your handling code here:
        this.exeOperacaoMat1Valor(Simbolos.LOGARITMO_10);
    }//GEN-LAST:event_btnLog10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) { // Seta layout para estilo Nimbus (padrão Java)
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Calculadora().setVisible(true);
        });
        Runtime.getRuntime().runFinalization();
        Runtime.getRuntime().gc();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnAdicao;
    private javax.swing.JButton btnBackspace;
    private javax.swing.JButton btnCos;
    private javax.swing.JButton btnCosH;
    private javax.swing.JButton btnDivisao;
    private javax.swing.JButton btnElevaCub;
    private javax.swing.JButton btnElevaQuad;
    private javax.swing.JButton btnExp;
    private javax.swing.JButton btnFatorial;
    private javax.swing.JButton btnLimparC;
    private javax.swing.JButton btnLimparCE;
    private javax.swing.JButton btnLog;
    private javax.swing.JButton btnLog10;
    private javax.swing.JButton btnMemoryClear;
    private javax.swing.JButton btnMemoryRecovery;
    private javax.swing.JButton btnMemorySaved;
    private javax.swing.JButton btnMod;
    private javax.swing.JButton btnMulti;
    private javax.swing.JButton btnPonto;
    private javax.swing.JButton btnPorcentagem;
    private javax.swing.JButton btnPositivoNegativo;
    private javax.swing.JButton btnPotenciacao;
    private javax.swing.JButton btnRaiz;
    private javax.swing.JButton btnRecipocro;
    private javax.swing.JButton btnResultado;
    private javax.swing.JButton btnSen;
    private javax.swing.JButton btnSenH;
    private javax.swing.JButton btnSub;
    private javax.swing.JButton btnTan;
    private javax.swing.JButton btnTanH;
    private javax.swing.JDialog jDialogInformacoesLegais;
    private javax.swing.JFrame jFrameConstantes;
    private javax.swing.JFrame jFrameRascunho;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuItem jMeColarRascunho;
    private javax.swing.JMenuItem jMeCopiar;
    private javax.swing.JMenuItem jMeCopiarConstante;
    private javax.swing.JMenuItem jMeCopiarRascunho;
    private javax.swing.JMenuItem jMeInformacoes;
    private javax.swing.JMenuItem jMeListaConstantes;
    private javax.swing.JMenuItem jMeRascunho;
    private javax.swing.JMenuItem jMeSair;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAutor;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblDataCriacao;
    private javax.swing.JLabel lblDataUltVersao;
    private javax.swing.JLabel lblInMemory;
    private javax.swing.JLabel lblUltVersao;
    private javax.swing.JLabel lblVersaoAtual;
    private javax.swing.JList<String> lstConstantes;
    private javax.swing.JTextArea txtAreaRascunho;
    private javax.swing.JTextField txtTela;
    private javax.swing.JTextField txtTelaHistory;
    // End of variables declaration//GEN-END:variables
    // Declaração de atributos classe Calculadora
    private final CopiarColar copy = new CopiarColar();
    private final DefaultListModel lista = new DefaultListModel();
    private final Calendar c = Calendar.getInstance();
    private String data;
    private int indiceConstante;
    private double memoria;
    private boolean insValores;
    private boolean inicio;
    private boolean parar;
    private boolean cliqueResultado;
    private boolean cliquePosiNegat;
    private boolean exceCalcUmValor;
    private String opAtua;
    private String operac;
    private double result;
    private double valor1;
    private double valor2;
    private boolean limpar;
    private boolean controle;
    
    public void limparTela(Simbolos simbolo) {
        
        if (simbolo.equals(Simbolos.LIMPAR_C)) {
            this.setControle(false); 
            this.setExceCalcUmValor(false);
            this.setOpAtua(Simbolos.NULO.getSimbolo());                          
            txtTelaHistory.setText(Simbolos.NULO.getSimbolo());                  
            this.setResult(Double.parseDouble(Simbolos.B_ZERO.getSimbolo()));   
        } 
        txtTela.setText(Simbolos.NULO.getSimbolo());                             
    }

    public void exeOperacaoMat1Valor(Simbolos operacao) {
        this.inicio = filtroOperacoes1valores();
        if (this.isInicio()) {
            if (txtTelaHistory.getText().isEmpty()) this.setControle(false);
            this.setValor1(Double.parseDouble(txtTela.getText()));
            switch(operacao.getSimbolo()) {
                case "sen":
                    this.seno();
                    break;
                case "cos":
                    this.cosseno();
                    break;
                case "tan":
                    this.tangente();
                    break;
                case "cosh":
                    this.cossenoH();
                    break;
                case "senh":
                    this.senoH();
                    break;
                case "tanh":
                    this.tangenteH();
                    break;
                case "sqr":
                    this.elevaQuad();
                    break;
                case "cub":
                    this.elevaCubo();
                    break;
                case "sqrt":
                    this.raizQuadrada();
                    break;
                case "reciproco":
                    this.reciproco();
                    break;
                case "fat":
                    this.setValor1(this.fatorial((int) this.getValor1()));
                    break;
                case "mod":
                    this.restoDivisaoPorDois();
                    break;
                case "log":
                    this.logaritmo();
                    break;
                case "exp":
                    this.expoente();
                    break;
                case "log10":
                    this.logaritmo10();
                    break;
            }
            txtTelaHistory.setText(txtTelaHistory.getText() + operacao.getSimbolo() + "(" + txtTela.getText() + ")");
            this.imprimeInteiroOuReal(this.getValor1());
            this.setInsValores(true);
            this.setExceCalcUmValor(true);
            this.setCliqueResultado(false);
        }
    }
    
    public void exeOperacaoMat2valor(Simbolos operacao) {
        this.inicio = filtroOperacoes2valores();
        if (this.isInicio()) {
            this.parar = this.verifica(operacao.getSimbolo());           
            if (!this.parar) this.calculo(operacao, this.isControle());  
            this.setOpAtua(operacao.getSimbolo());                       
            this.setControle(true);                                     
        }    
    }
    
    public void carregarConstantes() {
        
        for (ConstantesMatematicas m: ConstantesMatematicas.values()) {
            this.lista.addElement(m.getConstante());
        }
    }
    
    public void verificarLimpo() {
        if (this.isParar()) {
            if (this.isLimpar()) {
                txtTela.setText(Simbolos.NULO.getSimbolo());
            }
            this.setLimpar(false);
        }
    }
    
    public void inserirDigitos(Simbolos tecla) {
        
        if (this.isLimpar()) {
            txtTela.setText(Simbolos.NULO.getSimbolo());
        }
        if (this.isCliqueResultado()) {
            txtTela.setText(Simbolos.NULO.getSimbolo());
            this.setResult(Double.parseDouble(Simbolos.B_ZERO.getSimbolo()));
        }
        if (txtTelaHistory.getText().isEmpty()) {
            this.setControle(false);
        }
        this.setCliqueResultado(false);
        txtTela.setText(txtTela.getText() + tecla.getSimbolo());
        this.setLimpar(false);
        this.setInsValores(true);
    }
    
    public void calculo(Simbolos simbolo, boolean controle) {
        
        if (this.isExceCalcUmValor() && txtTelaHistory.getText().isEmpty()) {
            txtTelaHistory.setText(txtTela.getText() + " " + simbolo.getSimbolo());
        } else if (this.isExceCalcUmValor() && !txtTelaHistory.getText().isEmpty()) {
            txtTelaHistory.setText(txtTelaHistory.getText() + " " + simbolo.getSimbolo() + " ");
        } else if (!txtTelaHistory.getText().isEmpty()) {
            txtTelaHistory.setText(" " + txtTelaHistory.getText() + txtTela.getText() + " " + simbolo.getSimbolo() + " ");
        } else {
            txtTelaHistory.setText(txtTela.getText() + " " + simbolo.getSimbolo() + " ");
        }
 
        this.setOperac(simbolo.getSimbolo());
        this.setValor1(Double.parseDouble(txtTela.getText().replaceAll(",", ".")));
        this.setValor2(this.getResult());
            
        if (!this.isCliqueResultado()) {
            switch(simbolo.getSimbolo()) {
                case "+":
                    this.somatorioArray(this.controle);
                    break;
                case "-":
                    this.subtracaoArray(this.controle);
                    break;
                case "*":
                    this.multiplicArray(this.controle);
                    break;
                case "/":
                    this.dividirArray(this.controle);
                    break;
            }
        }
        txtTela.setText(Simbolos.NULO.getSimbolo());
        this.imprimeInteiroOuReal(this.getResult());
        this.setLimpar(true);
        this.setCliqueResultado(false);
        this.setExceCalcUmValor(false);
    }
    
    public boolean verifica(String atual) {
        
        this.setOperac(atual);
        if (!this.getOpAtua().equals(Simbolos.NULO.getSimbolo()) && !this.getOpAtua().equals(atual)) {
            
            this.setValor2(Double.parseDouble(txtTela.getText()));
            txtTelaHistory.setText(" " + txtTelaHistory.getText() + txtTela.getText() + " " + atual + " ");
            
            switch(this.getOpAtua()) {
                case "+":
                    this.soma();
                    break;
                case "-":
                    this.subt();
                    break;
                case "*":
                    this.mult();
                    break;
                case "/":
                    this.divi();
                    break;
            }
            this.setLimpar(true);
            this.imprimeInteiroOuReal(this.getResult());
            return true;
        }
        return false;
    }
    
    public boolean filtroOperacoes2valores() {
        return !txtTela.getText().isEmpty() && this.isInsValores();
    }
    
    private boolean filtroOperacoes1valores() {
        return !txtTela.getText().isEmpty();
    }
    
    public void imprimeInteiroOuReal(double valor) {
        if (this.inteiroOuReal(valor)) {
            txtTela.setText(String.format("%.0f", valor));
        } else {
            txtTela.setText(String.format("%f", valor).replaceAll(",", "."));
        }

        if (this.cliqueResultado || this.cliquePosiNegat) {
            this.setInsValores(true);
        } else {
            this.setInsValores(false);
        }
        this.setCliquePosiNegat(false);
    } 
    
    // Métodos de interface
    @Override
    public void somatorioArray(boolean controle) {
        
        if (!controle) {
            this.setResult(this.getValor1());
        } else {
            this.setResult(this.getValor2() + this.getValor1());
        }
    }
    
    @Override
    public void soma() {
        this.setResult(this.getResult() + this.getValor2());
    }
    
    @Override
    public void subtracaoArray(boolean controle) {

        if (!controle) {
            this.setResult(this.getValor1());
        } else {
            this.setResult(this.getValor2() - this.getValor1());
        }
    }
    
    @Override
    public void subt() {
        this.setResult(this.getResult() - this.getValor2());
    }

    @Override
    public void multiplicArray(boolean controle) {
        
        if (!controle) {
            this.setResult(this.getValor1());
        } else {
            this.setResult(this.getValor2() * this.getValor1());
        }
    }

    @Override
    public void mult() {
        this.setResult(this.getResult() * this.getValor2());
    }

    @Override
    public void dividirArray(boolean controle) {
        
        if (!controle) {
            this.setResult(this.getValor1());
        } else {
            this.setResult(this.getValor2() / this.getValor1());
        }
    }

    @Override
    public void divi() { 
        this.setResult(this.getResult() / this.getValor2());
    }

    @Override
    public void raizQuadrada() {
        if (this.getValor1() == -1) {
            this.setValor1(-1);
            return;
        }
        this.setValor1(sqrt(this.getValor1()));
    }

    @Override
    public void potenciacao() {
        this.setResult(pow(this.getValor1(), this.getValor2()));
    }

    @Override
    public void cosseno() {
        this.setValor1(cos(this.getValor1()));
    }

    @Override
    public void seno() {
        this.setValor1(sin(this.getValor1()));
    }
    
    @Override
    public void tangente() {
        this.setValor1(tan(this.getValor1()));
    }

    @Override
    public void cossenoH() {
        this.setValor1(cosh(this.getValor1()));
    }

    @Override
    public void senoH() {
        this.setValor1(sinh(this.getValor1()));
    }

    @Override
    public void tangenteH() {
        this.setValor1(tanh(this.getValor1()));
    }

    @Override
    public int fatorial(int num) {
        
        if (num == 0) {
            return 1;
        } else {
            return num * this.fatorial(num - 1);
        }
    }
    
    @Override
    public void elevaQuad() {
        this.setValor1(this.getValor1() * this.getValor1());
    }

    @Override
    public void elevaCubo() {
        this.setValor1(this.getValor1() * this.getValor1() * this.getValor1());
    }
    
    @Override
    public void restoDivisaoPorDois() {
        int valor = (int) this.getValor1();
        this.setValor1(valor % 2);
    }
    
    @Override
    public void logaritmo() {
        this.setValor1(log(this.getValor1()));
    }
    
    @Override
    public void logaritmo10() {
        this.setValor1(log10(this.getValor1()));
    }

    @Override
    public void expoente() {
        this.setValor1(exp(this.getValor1()));
    }

    @Override
    public void porcentagem() {
        this.setResult((this.getValor1()/100) * this.getValor2());
    }

    @Override
    public double convertePositivoOuNegativo(double valor) {
        valor *= -1;
        return valor;
    }
    
    @Override
    public boolean inteiroOuReal(double valor) {
        return valor % 1 == 0;
    }
    
    @Override
    public void reciproco() {
        this.setValor1(1/this.getValor1());
    }

    // GETTERS E SETTERS - métodos

    public boolean isExceCalcUmValor() {
        return exceCalcUmValor;
    }

    public void setExceCalcUmValor(boolean exceCalcUmValor) {
        this.exceCalcUmValor = exceCalcUmValor;
    }

    public boolean isCliquePosiNegat() {
        return cliquePosiNegat;
    }

    public void setCliquePosiNegat(boolean cliquePosiNegat) {
        this.cliquePosiNegat = cliquePosiNegat;
    }

    public boolean isInsValores() {
        return insValores;
    }

    public void setInsValores(boolean insValores) {
        this.insValores = insValores;
    }
    
    public boolean isParar() {
        return parar;
    }

    public void setParar(boolean parar) {
        this.parar = parar;
    }

    public boolean isCliqueResultado() {
        return cliqueResultado;
    }

    public void setCliqueResultado(boolean cliqueResultado) {
        this.cliqueResultado = cliqueResultado;
    }

    public boolean isInicio() {
        return inicio;
    }

    public void setInicio(boolean inicio) {
        this.inicio = inicio;
    }
    
    public String getOperac() {
        return this.operac;
    }

    public void setOperac(String operac) {
        this.operac = operac;
    }

    public double getValor1() {
        return this.valor1;
    }

    public void setValor1(double valor1) {
        this.valor1 = valor1;
    }

    public double getValor2() {
        return this.valor2;
    }

    public void setValor2(double valor2) {
        this.valor2 = valor2;
    }

    public double getResult() {
        return result;
    }

    public void setResult(double result) {
        this.result = result;
    }

    public boolean isLimpar() {
        return limpar;
    }

    public void setLimpar(boolean limpar) {
        this.limpar = limpar;
    }

    public boolean isControle() {
        return controle;
    }

    public void setControle(boolean controle) {
        this.controle = controle;
    }

    public String getOpAtua() {
        return opAtua;
    }

    public void setOpAtua(String OpAtua) {
        this.opAtua = OpAtua;
    }
}